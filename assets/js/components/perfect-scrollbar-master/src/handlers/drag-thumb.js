import*as CSS from"../lib/css";import*as DOM from"../lib/dom";import cls,{addScrollingClass,removeScrollingClass}from"../lib/class-names";import updateGeometry from"../update-geometry";import{toInt}from"../lib/util";export default function(e){bindMouseScrollHandler(e,["containerWidth","contentWidth","pageX","railXWidth","scrollbarX","scrollbarXWidth","scrollLeft","x","scrollbarXRail"]),bindMouseScrollHandler(e,["containerHeight","contentHeight","pageY","railYHeight","scrollbarY","scrollbarYHeight","scrollTop","y","scrollbarYRail"])}function bindMouseScrollHandler(t,[l,n,r,s,e,i,c,o,a]){const u=t.element;let m=null,d=null,p=null;function b(e){e.touches&&e.touches[0]&&(e[r]=e.touches[0].pageY),u[c]=m+p*(e[r]-d),addScrollingClass(t,o),updateGeometry(t),e.stopPropagation(),e.preventDefault()}function g(){removeScrollingClass(t,o),t[a].classList.remove(cls.state.clicking),t.event.unbind(t.ownerDocument,"mousemove",b)}function h(e,o){m=u[c],o&&e.touches&&(e[r]=e.touches[0].pageY),d=e[r],p=(t[n]-t[l])/(t[s]-t[i]),o?t.event.bind(t.ownerDocument,"touchmove",b):(t.event.bind(t.ownerDocument,"mousemove",b),t.event.once(t.ownerDocument,"mouseup",g),e.preventDefault()),t[a].classList.add(cls.state.clicking),e.stopPropagation()}t.event.bind(t[e],"mousedown",e=>{h(e)}),t.event.bind(t[e],"touchstart",e=>{h(e,!0)})}