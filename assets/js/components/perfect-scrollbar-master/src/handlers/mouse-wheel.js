import*as CSS from"../lib/css";import cls from"../lib/class-names";import updateGeometry from"../update-geometry";import{env}from"../lib/util";export default function(n){const a=n.element;function e(l){var t,o,s,r,[i,c]=function(){let e=l.deltaX,t=-1*l.deltaY;return void 0!==e&&void 0!==t||(e=-1*l.wheelDeltaX/6,t=l.wheelDeltaY/6),l.deltaMode&&1===l.deltaMode&&(e*=10,t*=10),e!=e&&t!=t&&(e=0,t=l.wheelDelta),l.shiftKey?[-t,-e]:[e,t]}();if(!function(t,l,o){if(!env.isWebKit&&a.querySelector("select:focus"))return 1;if(a.contains(t)){let e=t;for(;e&&e!==a;){if(e.classList.contains(cls.element.consuming))return 1;var s=CSS.get(e);if(o&&s.overflowY.match(/(scroll|auto)/)){var r=e.scrollHeight-e.clientHeight;if(0<r&&(0<e.scrollTop&&o<0||e.scrollTop<r&&0<o))return 1}if(l&&s.overflowX.match(/(scroll|auto)/)&&0<(r=e.scrollWidth-e.clientWidth)&&(0<e.scrollLeft&&l<0||e.scrollLeft<r&&0<l))return 1;e=e.parentNode}}}(l.target,i,c)){let e=!1;n.settings.useBothWheelAxes?n.scrollbarYActive&&!n.scrollbarXActive?(c?a.scrollTop-=c*n.settings.wheelSpeed:a.scrollTop+=i*n.settings.wheelSpeed,e=!0):n.scrollbarXActive&&!n.scrollbarYActive&&(i?a.scrollLeft+=i*n.settings.wheelSpeed:a.scrollLeft-=c*n.settings.wheelSpeed,e=!0):(a.scrollTop-=c*n.settings.wheelSpeed,a.scrollLeft+=i*n.settings.wheelSpeed),updateGeometry(n),(e=e||(i=i,c=c,t=Math.floor(a.scrollTop),o=0===a.scrollTop,t=t+a.offsetHeight===a.scrollHeight,s=0===a.scrollLeft,r=a.scrollLeft+a.offsetWidth===a.scrollWidth,!(Math.abs(c)>Math.abs(i)?o||t:s||r))||!n.settings.wheelPropagation)&&!l.ctrlKey&&(l.stopPropagation(),l.preventDefault())}}void 0!==window.onwheel?n.event.bind(a,"wheel",e):void 0!==window.onmousewheel&&n.event.bind(a,"mousewheel",e)}